name: Build, Push, and Scan

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push Docker Image to Docker Hub
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/my-html-app:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-html-app:latest

      - name: Log in to GitHub Container Registry
        run: docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.PAC_GITHUB_TOKEN }}

      - name: Build and Push Docker Image to GHCR
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/my-html-app:latest .
          docker push ghcr.io/${{ github.repository_owner }}/my-html-app:latest

      - name: Trivy Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/my-html-app:latest
          exit-code: 0  # Set to 1 to fail the workflow if vulnerabilities are found
          severity: CRITICAL  # Adjust severity level as needed

  # anchore_scan:
  #   runs-on: ubuntu-latest

  #   needs: build_and_push

  #   steps:
  #     - uses: anchore/scan-action@v3
  #       id: scan
  #       with:
  #         image: "my-html-app:latest"
  #         fail-build: true
  #         severity-cutoff: critical
  #         only-fixed: true
  #         by-cve: true

  #     - name: Inspect Anchore scan SARIF report
  #       run: cat ${{ steps.scan.outputs.sarif }}





  # dastardly_scan:
  #   runs-on: ubuntu-latest

  #   #needs: anchore_scan
    

  #   steps:

      
  #     - name: Log in to Docker Hub
  #       run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

  #     - name: Checkout Repository
  #       uses: actions/checkout@v2

  #     - name: Run Dastardly Scan
  #       run: |
  #         set -x
  #         docker run -v $(pwd):/target portswigger/dastardly:latest --target http://localhost:12121 --report /target/dastardly-report.xml
  #         set +x

  #     - name: Upload Scan Report
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: dastardly-report
  #         path: dastardly-report.xml


      - name: 'Dastardly Scan Action'
          description: 'Runs a Dastardly scan against a target site'
          author: 'PortSwigger'
          inputs:
            target-url:
              description: 'The full url (including scheme) of the site to scan'
              required: true
            output-filename:
              description: 'The filename used for the scan report. This filepath relates to the dastardly container, and will exist in the github workspace (/github/workspace)'
              required: false
              default: dastardly-report.xml
          runs:
            using: 'docker'
            image: 'Dockerfile'
            env:
              BURP_START_URL: ${{ inputs.target-url }}
              BURP_REPORT_FILE_PATH: /github/workspace/${{ inputs.output-filename }}
          branding:
            icon: 'activity'
            color: 'green'
